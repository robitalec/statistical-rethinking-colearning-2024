---
title: "Lecture 06 Notes"
author: "Alec L. Robitaille"
date: "2024-02-22"
---

```{r}
#| include: false
source('R/packages.R')
```

# Causal Thinking

In an experiment, we remove the causes of the treatment by randomizing it

We need a statistical procedure that mimics randomization, that allows us to
transform our sample into results that were as if we could have done that
experiment

We communicate assumptions clearly using DAGs, and use logic to derive the
implications of the causal model

Recall from L05, three common confounds and their implications for the 
relationships between X, Y, and Z: 

![](../graphics/stat_rethinking_l05_four_elemental_xyz.png)

## Example: XYU
```{r}
#| echo: false
coords <- data.frame(
	name = c('X', 'Y', 'U'),
	x =    c(1,    3,   2),
	y =    c(0,    0,   1)
)
```

```{r}
dagify(
	X ~ U,
	Y ~ U + X,
  coords = coords
) |> ggdag(seed = 2, layout = 'auto') + theme_dag()
```

Removing the confound U 

U is a common cause of X and Y. X and Y are associated because of their 
common cause U and we can remove that association by stratifying on U. Then, 
the remaining association after stratifying by U is the association of X and Y.

$$P(Y|do(X)) = \sum_{U}P(Y|X, U)P(U) = E_{U}(Y|X,U)$$

The distribution of Y, stratified by X and U, averaged over the distribution of U. 

The causal effect of X on Y is not the coefficient relating X to Y, it is the
distribution of Y when we change X, averaged over the distributions of the
control variables.


## Example: cheetahs, baboons and gazelles

```{r}
#| echo: false
coords <- data.frame(
	name = c('B', 'G', 'C'),
	x =    c(1,    3,   2),
	y =    c(0,    0,   1)
)
```

```{r}
dagify(
	B ~ C,
	G ~ C + B,
  coords = coords
) |> ggdag(seed = 2, layout = 'auto') + theme_dag()
```


When cheetahs are present, baboons hang out near trees and do not predate on
gazelles. When cheetahs are absent, baboons predate on gazelles. The causal
effect of baboons depends on the distribution of cheetahs.


## do-calculus

do-calculus are the rules for finding $P(Y | do(X))$, that justify graphical
analysis of DAGs and say what is possible.

$P(Y | do(X))$: the distribution of Y, stratified by X and U, averaged over the
distribution of U

DAGs don't make assumptions about functional relationships, they are non-parametric

DAGs allow us to justify if we need to make additional assumptions at all, 
without needing additional assumptions about the functional relationships. 


### Backdoor criterion

The backdoor criterion is the rule to find the set of variables to stratify by
to yield `P(Y | do(X))`

1. Identify all paths connecting treatment to the outcome, regardless of the
direction of arrows
2. Identify paths with arrows entering the treatment (backdoor). These are non-casual paths, because causal paths exit the treatment
(frontdoor). 
3. Find adjustment sets that close all backdoor/non-causal paths.


#### Example: XYZU

```{r}
#| echo: false
coords <- data.frame(
	name = c('X', 'Y', 'U', 'Z'),
	x =    c(1,    3,   2, 1.5),
	y =    c(0,    0,   1, 0.5)
)
```

```{r}
dag <- dagify(
	X ~ Z,
	Y ~ U + X,
	Z ~ U,
  coords = coords,
	exposure = 'X',
	outcome = 'Y',
	latent = 'U'
)
ggdag_status(dag, seed = 2, layout = 'auto') + theme_dag()
```

1. Identify all paths connecting treatment to the outcome, regardless of the
direction of arrows

- `X -> Y`
- `X <- Z <- U -> Y`

2. Identify paths with arrows entering the treatment (backdoor). These are non-casual paths, because causal paths exit the treatment
(frontdoor). 

- ~~`X -> Y`~~
- `X <- Z <- U -> Y`



3. Find adjustment sets that close all backdoor/non-causal paths.

```{r}
adjustmentSets(dag)
```

Block the pipe: $X \perp\!\!\!\perp U | Z$

Z "knows" all of the association between X and Y that is due to U. 


##### Expressions

$$P(Y|do(X)) = \sum_{U}P(Y|X, Z)P(Z = z)$$

$$Y_{i} \sim Normal(\mu_{i}, \sigma)$$

$$\mu_{i} = \alpha + \beta_{X} X_{i} + \beta_{Z} Z_{i}$$

##### Simulations 

```{r}
# simulate confounded Y
N <- 200
b_XY <- 0
b_UY <- -1
b_UZ <- -1
b_ZX <- 1
set.seed(10)
U <- rbern(N)
Z <- rnorm(N, b_UZ * U)
X <- rnorm(N, b_ZX * Z)
Y <- rnorm(N, b_XY * X + b_UY * U)
d <- list(Y = Y, X = X, Z = Z)


# ignore U,Z
m_YX <- quap(alist(
	Y ~ dnorm(mu , sigma),
	mu <- a + b_XY * X,
	a ~ dnorm(0 , 1),
	b_XY ~ dnorm(0 , 1),
	sigma ~ dexp(1)
),
data = d)

# stratify by Z
m_YXZ <- quap(alist(
	Y ~ dnorm(mu , sigma),
	mu <- a + b_XY * X + b_Z * Z,
	a ~ dnorm(0 , 1),
	c(b_XY, b_Z) ~ dnorm(0 , 1),
	sigma ~ dexp(1)
),
data = d)

post <- extract.samples(m_YX)
post2 <- extract.samples(m_YXZ)
dens(post$b_XY, lwd = 3, col = 1, xlab = "posterior b_XY", xlim = c(-0.3, 0.3))
dens(post2$b_XY, lwd = 3, col = 2, add = TRUE)
```

Note: the coefficient b_Z is meaningless and does not represent the causal 
effect of Z on Y. This model is not structured to estimate this effect 
and it would require a different adjustment set. Any coefficients for
a variable that you add as part of the adjustment set are not usually 
interpretable. 

```{r}
precis(m_YXZ)
```

